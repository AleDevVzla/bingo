Algoritmo Bingo

Constante NUM_BOLAS <- 75
Constante FILAS <- 5
Constante COLUMNAS <- 5

Tipo TLinea <- Arreglo[1..FILAS] de Entero
Tipo TCarton <- Arreglo[1..FILAS, 1..COLUMNAS] de Entero
Tipo TMarcado <- Arreglo[1..FILAS, 1..COLUMNAS] de Logico

Definir NUM_JUGADORES: Entero
Definir CARTONES_POR_JUGADOR: Arreglo Dinámico de Entero
Definir Cartones: Arreglo Dinámico de Arreglo Dinámico de TCarton
Definir MarcadosAux: Arreglo Dinámico de Arreglo Dinámico de TMarcado
Definir Marcados: Arreglo Dinámico de Arreglo Dinámico de TMarcado
Definir BolasExtraidas: Arreglo[1..NUM_BOLAS] de Entero
Definir Ganador: Entero

Funcion LeerNumero(mensaje)
    Variables:
        numero: Entero
        mensaje: Cadena
    Repetir
        Escribir mensaje
        Leer numero
        Si no Es_Numero(numero) Entonces
            Escribir "Error: Debe ingresar un número válido"
        FinSi
    Hasta Que Es_Numero(numero)
    Devolver ConvertirANumero(numero)
FinFuncion

Funcion ExisteEnArreglo(arreglo, valor)
    Variables:
        existe: Logico
        i: Entero
    Para i <- 1 Hasta Longitud(arreglo) Con Paso 1 Hacer
        Si arreglo[i] = valor Entonces
            Devolver Verdadero
        FinSi
    FinPara
    Devolver Falso
FinFuncion

Funcion GenerarNumeroUnico(arreglo, min, max)
    Variables:
        num: Entero
    Repetir
        num <- Aleatorio(min, max)
    Hasta Que no ExisteEnArreglo(arreglo, num)
    Devolver num
FinFuncion

Funcion GenerarLinea(numeroDeLinea)
    Variables:
        linea: Arreglo[FILAS]
        i: Entero

    Para i <- 1 Hasta FILAS Con Paso 1 Hacer
        linea[i] <- -1
    FinPara

    Para i <- 1 Hasta FILAS Con Paso 1 Hacer
        linea[i] <- GenerarNumeroUnico(linea, (numeroDeLinea - 1) * 15 + 1, numeroDeLinea * 15)
    FinPara

    Devolver linea
FinFuncion

Procedimiento GenerarCarton(carton)
    Variables:
        linea: TLinea
        i, j: Entero
    Para i <- 1 Hasta COLUMNAS Con Paso 1 Hacer
        linea <- GenerarLinea(i)
        Para j <- 1 Hasta FILAS Con Paso 1 Hacer
            Si no (i = 3 Y j = 3) Entonces
                carton[j,i] <- linea[j]
            Sino
                carton[j,i] <- -1
            FinSi
        FinPara
    FinPara
FinProcedimiento

Procedimiento MostrarCarton(carton, marcado)
    Para i <- 1 Hasta FILAS Con Paso 1 Hacer
        Para j <- 1 Hasta COLUMNAS Con Paso 1 Hacer
            Si carton[i,j] = -1 O marcado[i,j] Entonces
                Escribir "|--|"
            Sino
                Escribir "|", carton[i,j], "|"
            FinSi
        FinPara
        Escribir "\n"
    FinPara
FinProcedimiento

Funcion SacarBola()
    Variables:
        bola, i: Entero
    bola <- GenerarNumeroUnico(BolasExtraidas, 1, NUM_BOLAS)
    Para i <- 1 Hasta NUM_BOLAS Con Paso 1 Hacer
        Si BolasExtraidas[i] = -1 Entonces
            BolasExtraidas[i] <- bola
            Romper
        FinSi
    FinPara
    Devolver bola
FinFuncion

Procedimiento MarcarNumero(carton, marcado, marcadoAux, bola)
    Variables:
        i, j: Entero
    Para i <- 1 Hasta FILAS Con Paso 1 Hacer
        Para j <- 1 Hasta COLUMNAS Con Paso 1 Hacer
            Si carton[i,j] = bola Entonces
                marcadoAux[i,j] <- Verdadero
                marcado[i,j] <- Verdadero
            FinSi
        FinPara
    FinPara
FinProcedimiento

Funcion RevisarLinea(marcadoAux, marcado)
    Variables
        i, j: Entero
        contadorLineas: Entero
        lineaProcesada: Logico
    contadorLineas <- 0
    
    // Revisar filas
    Para i <- 1 Hasta FILAS Con Paso 1 Hacer
        Si marcado[i,1] Y marcado[i,2] Y marcado[i,3] Y marcado[i,4] Y marcado[i,5] Entonces
            lineaProcesada <- Verdadero
            Para j <- 1 Hasta COLUMNAS Con Paso 1 Hacer
                Si marcadoAux[i,j] Entonces
                    lineaProcesada <- Falso
                FinSi
            FinPara
            Si no lineaProcesada Entonces
                contadorLineas <- contadorLineas + 1
                Para j <- 1 Hasta COLUMNAS Con Paso 1 Hacer
                    marcadoAux[i,j] <- Falso
                FinPara
            FinSi
        FinSi
    FinPara
    
    // Revisar columnas
    Para i <- 1 Hasta COLUMNAS Con Paso 1 Hacer
        Si marcado[1,i] Y marcado[2,i] Y marcado[3,i] Y marcado[4,i] Y marcado[5,i] Entonces
            lineaProcesada <- Verdadero
            Para j <- 1 Hasta FILAS Con Paso 1 Hacer
                Si marcadoAux[j,i] Entonces
                    lineaProcesada <- Falso
                FinSi
            FinPara
            Si no lineaProcesada Entonces
                contadorLineas <- contadorLineas + 1
                Para j <- 1 Hasta FILAS Con Paso 1 Hacer
                    marcadoAux[j,i] <- Falso
                FinPara
            FinSi
        FinSi
    FinPara
    
    // Revisar diagonales
    Si marcado[1,1] Y marcado[2,2] Y marcado[3,3] Y marcado[4,4] Y marcado[5,5] Entonces
        lineaProcesada <- Verdadero
        Si marcadoAux[1,1] O marcadoAux[2,2] O marcadoAux[3,3] O marcadoAux[4,4] O marcadoAux[5,5] Entonces
            lineaProcesada <- Falso
        FinSi
        Si no lineaProcesada Entonces
            contadorLineas <- contadorLineas + 1
            marcadoAux[1,1] <- Falso
            marcadoAux[2,2] <- Falso
            marcadoAux[3,3] <- Falso
            marcadoAux[4,4] <- Falso
            marcadoAux[5,5] <- Falso
        FinSi
    FinSi
    
    Si marcado[5,1] Y marcado[4,2] Y marcado[3,3] Y marcado[2,4] Y marcado[1,5] Entonces
        lineaProcesada <- Verdadero
        Si marcadoAux[5,1] O marcadoAux[4,2] O marcadoAux[3,3] O marcadoAux[2,4] O marcadoAux[1,5] Entonces
            lineaProcesada <- Falso
        FinSi
        Si no lineaProcesada Entonces
            contadorLineas <- contadorLineas + 1
            marcadoAux[5,1] <- Falso
            marcadoAux[4,2] <- Falso
            marcadoAux[3,3] <- Falso
            marcadoAux[2,4] <- Falso
            marcadoAux[1,5] <- Falso
        FinSi
    FinSi
    
    Devolver contadorLineas
FinFuncion

Funcion RevisarBingo(marcado)
    Para i <- 1 Hasta FILAS Con Paso 1 Hacer
        Para j <- 1 Hasta COLUMNAS Con Paso 1 Hacer
            Si no marcado[i,j] Entonces
                Devolver Falso
            FinSi
        FinPara
    FinPara
    Devolver Verdadero
FinFuncion

Procedimiento InicializarJuego()
    Variables:
        i, j, k, l: Entero
    Ganador <- -1
    
    Para i <- 1 Hasta NUM_JUGADORES Con Paso 1 Hacer
        CARTONES_POR_JUGADOR[i] <- LeerNumero("Ingrese el número de cartones para el jugador " + i + ": ")
    FinPara
    
    Redimensionar Cartones a NUM_JUGADORES
    Redimensionar MarcadosAux a NUM_JUGADORES
    Redimensionar Marcados a NUM_JUGADORES

  
    Para i <- 1 to Longitud(Cartones) Con Paso 1 Hacer
        Redimensionar Cartones[i] a CARTONES_POR_JUGADOR[i]
        Redimensionar MarcadosAux[i] a CARTONES_POR_JUGADOR[i]
        Redimensionar Marcados[i] a CARTONES_POR_JUGADOR[i]
    FinPara

    
    Para i <- 1 Hasta NUM_BOLAS Con Paso 1 Hacer
        BolasExtraidas[i] <- -1
    FinPara
    
    Para i <- 1 Hasta NUM_JUGADORES Con Paso 1 Hacer
        Para j <- 1 Hasta CARTONES_POR_JUGADOR[i] Con Paso 1 Hacer
            GenerarCarton(Cartones[i,j])
            Para k <- 1 Hasta FILAS Con Paso 1 Hacer
                Para l <- 1 Hasta COLUMNAS Con Paso 1 Hacer
                    Si k = 3 Y l = 3 Entonces
                        MarcadosAux[i,j,k,l] <- Falso
                        Marcados[i,j,k,l] <- Verdadero
                    Sino
                        MarcadosAux[i,j,k,l] <- Falso
                        Marcados[i,j,k,l] <- Falso
                    FinSi
                FinPara
            FinPara
        FinPara
    FinPara
FinProcedimiento

Procedimiento Jugar()
    Variables:
        bola, lineas: Entero
        i, j: Entero
    Repetir
        Limpiar Pantalla
        Escribir "===== Bingo ====="
        Escribir ""
        
        Para i <- 1 Hasta NUM_JUGADORES Con Paso 1 Hacer
            Escribir "Cartones del Jugador ", i, ":"
            Para j <- 1 Hasta CARTONES_POR_JUGADOR[i] Con Paso 1 Hacer
                MostrarCarton(Cartones[i,j], Marcados[i,j])
                Escribir ""
            FinPara
        FinPara
        
        Si Ganador <> -1 Entonces
            Romper
        FinSi
        
        bola <- SacarBola()
        Escribir "Bola número: ", bola
        Escribir ""
        
        Para i <- 1 Hasta NUM_JUGADORES Con Paso 1 Hacer
            Para j <- 1 Hasta CARTONES_POR_JUGADOR[i] Con Paso 1 Hacer
                MarcarNumero(Cartones[i,j], Marcados[i,j], MarcadosAux[i,j], bola)
                Si RevisarBingo(Marcados[i,j]) Entonces
                    Ganador <- i
                    Escribir "Jugador ", i, " ha llenado el cartón ", j, ". ¡Bingo!"
                    Romper
                FinSi
                lineas <- RevisarLinea(MarcadosAux[i,j], Marcados[i,j])
                Si lineas > 0 Entonces
                    Escribir "Jugador ", i, " ha llenado ", lineas, " líneas en el cartón ", j
                FinSi
            FinPara
        FinPara
        
        Escribir "Presione cualquier tecla para continuar..."
        Esperar Tecla
    Hasta Que Falso
    
    Escribir "El ganador es el Jugador ", Ganador, "... ¡Felicidades!"
FinProcedimiento

Inicio
    NUM_JUGADORES <- LeerNumero("Ingrese el número de jugadores: ")
    Redimensionar CARTONES_POR_JUGADOR a NUM_JUGADORES
    InicializarJuego()
    Jugar()
Fin